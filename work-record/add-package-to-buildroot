1、在package目录中创建新的目录，例如 libfoo
2、增加文件  Config.in 和 libfoo.mk
3、Config.in文件内容（注意对齐格式）
config BR2_PACKAGE_LIBFOO
        bool "libfoo"
        help
          This is a comment that explain what libfoo is.

          http://foosoftware.org/libfoo/
          
4、libfoo.mk文件内容，注意文件对齐格式
################################################################################
#
# libfoo
#
################################################################################

LIBFOO_VERSION = 1.0
LIBFOO_SOURCE = foo-test-$(LIBFOO_VERSION).tar.gz
LIBFOO_SITE = ~/tmp
LIBFOO_LICENSE = GPL-3.0+
LIBFOO_SITE_METHOD = file
#LIBFOO_LICENSE_FILES = COPYING
#LIBFOO_INSTALL_STAGING = YES
#LIBFOO_CONFIG_SCRIPTS = libfoo-config:
#LIBFOO_DEPENDENCIES = host-libaaa libbbb

#define LIBFOO_EXTRACT_CMDS
#       cp $(TOPDIR)/$(LIBFOO_SOURCE) $(@D)
#endef
LIBFOO_MAKE_OPTS = \
        CC="$(TARGET_CC)" \
        ARCH=$(KERNEL_ARCH) \
        PREFIX="$(TARGET_DIR)" \
        CROSS_COMPILE="$(TARGET_CROSS)" \
        CONFIG_PREFIX="$(TARGET_DIR)" \
        SKIP_STRIP=y

define LIBFOO_BUILD_CMDS
        $(MAKE) $(TARGET_CONFIGURE_OPTS) $(LIBFOO_MAKE_OPTS) -C $(@D) all
endef

define LIBFOO_INSTALL_STAGING_CMDS
        $(INSTALL) -D -m 0755 $(@D)/hj-hello1 $(STAGING_DIR)/bin/hj-hello1
        $(INSTALL) -D -m 0755 $(@D)/hj-hello2 $(STAGING_DIR)/sbin/hj-hello2
        $(INSTALL) -D -m 0755 $(@D)/hj-hello3 $(STAGING_DIR)/usr/sbin/hj-hello3
endef

define LIBFOO_INSTALL_TARGET_CMDS
        $(INSTALL) -D -m 0755 $(@D)/hj-hello2 $(TARGET_DIR)/usr/hj-hello2
endef

#define LIBFOO_USERS
#       foo -1 libfoo -1 * - - - LibFoo daemon
#endef

#define LIBFOO_DEVICES
#       /dev/foo  c  666  0  0  42  0  -  -  -
#endef

#define LIBFOO_PERMISSIONS
#       /bin/foo  f  4755  foo  libfoo   -  -  -  -  -
#endef

$(eval $(generic-package))
